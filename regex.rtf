{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red88\green118\blue71;\red41\green50\blue40;\red117\green114\blue185;\red109\green109\blue109;\red86\green132\blue173;
}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c16078\c19608\c15686;\csgenericrgb\c45882\c44706\c72549;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c33725\c51765\c67843;
}
\margl1440\margr1440\vieww21400\viewh27040\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs40 \cf2 \cb3 import \cf4 re\
\
text = \cf5 "You can reach me at 123-123-4567"\
\cf4 pattern = re.compile(\cf5 r'\cb6 \\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d\cb3 '\cf4 )\
result = re.search(pattern\cf2 , \cf4 text)\
\cf7 print\cf4 (result) \cf8 # this will return match object with match\
                # information and index location of match\
\cf7 print\cf4 (result.span()) \cf8 # get start and end index in tuple\
\cf7 print\cf4 (result.start()) \cf8 # get start index of match\
\cf7 print\cf4 (result.group()) \cf8 # get the pattern match\
\
\
\cf4 text = \cf5 "Call me at 123-123-4567 or 333-333-3333"\
\cf4 pattern = re.compile(\cf5 r'\cb6 \\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d\cb3 '\cf4 )\
\cf8 # it will give list of all matches\
\cf4 results = re.findall(pattern\cf2 , \cf4 text)\
\cf7 print\cf4 (results)\
\
\cf8 # to get object with more details for all match\
\cf2 for \cf4 result \cf2 in \cf4 re.finditer(pattern\cf2 , \cf4 text):\
    \cf7 print\cf4 (result)  \cf8 # print(result.span())\
\
# Character identifier\
# so far we have seen '\\d' for digit\
# '\\w' is use for alphanumeric -> D_og-1 \\w\\w\\w\\w-\\w\
# '\\s' for white space -> d o g d\\so\\sg\
# '\\D' for non digit -> CODE \\D\\D\\D\\D\
# '\\W' for non-alphanumeric -> *-+=)\
\
\
# Quantifiers\
# + (Occurs one or more time)\
# \{3\} Occurs exactly 3 times\
# * (Occurs zero or more times)\
# ? (Once or more)\
\
\cf4 text = \cf5 "You can reach me at 123-123-4567"\
\cf4 pattern = re.compile(\cf5 r'\cb6 \\d\{3\}-\\d\{3\}-\\d\{4\}\cb3 '\cf4 )\
result = re.search(pattern\cf2 , \cf4 text)\
\cf7 print\cf4 (result) \cf8 # this will return match object with match\
                # information and index location of match\
\cf7 print\cf4 (result.group()) \cf8 # get the pattern match\
\
# check for individual group\
\cf4 pattern = re.compile(\cf5 r'\cb6 (\\d\{3\})-(\\d\{3\})-(\\d\{4\})\cb3 '\cf4 )\
result = re.search(pattern\cf2 , \cf4 text)\
\cf7 print\cf4 (result.group(\cf9 1\cf4 ))\
\cf7 print\cf4 (result.group(\cf9 3\cf4 ))\
\
\
\cf8 # or (|) operator\
\cf4 text = \cf5 "I have Tesla car"\
\cf4 pattern = re.compile(\cf5 r'\cb6 Tesla\cb3 '\cf4 )\
\cf8 # pattern = re.compile(r'Infiniti')\
# pattern = re.compile(r'Tesla | Infiniti')\
\cf4 model_match = re.search(pattern\cf2 , \cf4 text)\
\cf7 print\cf4 (model_match)\
\
\
\cf8 # . (dot) operator\
\cf4 text = \cf5 "It is best to take rest during fest"\
\cf4 pattern = re.compile(\cf5 r'\cb6 .est\cb3 '\cf4 )\
result = re.findall(pattern\cf2 , \cf4 text)\
\cf7 print\cf4 (result)\
\
\cf8 # ^ (start with)\
\cf4 text = \cf5 "1/1/2021"\
\cf8 # text = "date 1/1/2021"\
\cf4 result = re.findall(\cf5 "\cb6 ^\\d\cb3 "\cf2 , \cf4 text)\
\cf7 print\cf4 (result)\
\
\cf8 # $ (end with)\
\cf4 text = \cf5 "Today's date 1/1/2021"\
\cf8 # text = "Today's date 1/1/2021 monday"\
\cf4 result = re.findall(\cf5 '\cb6 \\d$\cb3 '\cf2 , \cf4 text)\
\cf7 print\cf4 (result)\
\
\cf8 # [] to exclude\
# you want to remove all punctuation from text\
\cf4 text = \cf5 "This is Sanjeev! the founder of interviewbox.tech?"\
\cf4 pattern = re.compile(\cf5 r'\cb6 [^!?]+\cb3 '\cf4 )\
result = re.findall(pattern\cf2 , \cf4 text)\
\cf7 print\cf4 (result)\
\cf8 # print(''.join(result))\
}